# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: Released

on:
  release:
    types: 
      - released

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - name: Set env
      run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV 
    - name: Test
      run: |
        echo $RELEASE_VERSION
        echo ${{ env.RELEASE_VERSION }}
    - uses: actions/checkout@v4
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 9.x.x
    - name: Restore dependencies
      run: dotnet restore
    - name: BuildTest
      run: dotnet build
    - name: Test
      run: dotnet test --no-build --verbosity normal
    - name: Clean
      run: dotnet clean
    - name: Build
      run: dotnet build --configuration Release --no-restore
    - name: Build cli
      run: |
        cd src/VKProxy.Cli
        dotnet pack
    - name: push
      env: 
        nugetkey: ${{ secrets.nugetkey }}
      run: for x in  $(find . -name "*.nupkg" -print); do dotnet nuget push -k $nugetkey -s https://api.nuget.org/v3/index.json $x; done
    - name: Docker Setup Docker
      uses: docker/setup-docker-action@v4.3.0
    - name: build img
      run: cd src/VKProxy.Cli && docker build -t vkproxy/agent:$RELEASE_VERSION .
    - name: Docker Login
      uses: docker/login-action@v3.4.0
      with:
        username: ${{ secrets.DOCKER_N }}
        password: ${{ secrets.DOCKER_P }}
    - name: push img
      run: docker push vkproxy/agent:$RELEASE_VERSION
