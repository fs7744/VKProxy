apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: minimal-ingress
  namespace: default
  annotations:
    vkproxy.ingress.kubernetes.io/transforms: |
      - PathPrefix: "/apis"
      - RequestHeader: header1
        Append: bar
spec:
  rules:
    - http:
        paths:
          - path: /foo
            pathType: Prefix
            backend:
              service:
                name: frontend
                port:
                  number: 80
---
apiVersion: v1
kind: Service
metadata:
  name: frontend
  namespace: default
  annotations:
    vkproxy.ingress.kubernetes.io/load-balancing: Random
    vkproxy.ingress.kubernetes.io/health-check: |
        Active:
            Policy: "Connect"
            Interval: '00:00:10'
            Timeout: '00:00:10'
            Path: /api/health
            Query: "?foo=bar"
            Method: POST
    vkproxy.ingress.kubernetes.io/http-client: |
      SslProtocols: Ssl3
      MaxConnectionsPerServer: 2
      DangerousAcceptAnyServerCertificate: true

    vkproxy.ingress.kubernetes.io/http-request: |
      ActivityTimeout: '00:01:00'
      Version: '2.0'
      VersionPolicy: 'RequestVersionExact'
      AllowResponseBuffering: false

    vkproxy.ingress.kubernetes.io/metadata: |
        PathPrefix: "/apis"
        RequestHeader: header1
        Append: bar
spec:
  selector:
    app: frontend
  ports:
    - name: http
      port: 80
      targetPort: 80
  type: ClusterIP
---
apiVersion: v1
kind: Endpoints
metadata:
  name: frontend
  namespace: default
subsets:
  - addresses:
      - ip: 10.244.2.38
    ports:
      - name: http
        port: 80
        protocol: TCP
